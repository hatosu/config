mlem:
- what choco wanted
- ai search result command that links sources like phind
- background remover
- search jp term, and have it output jpdb definitions, jpdb frequency, jisho definitions, massif fuzzy search result, massif quotes search result, and google sentence search result

website:
- 

c++ website:
https://hatosu.com/ !!
- pimp the fuck out of https://hatosu.com/
- add a "help stack" section on your personal site, setup ssh and all server stuff with a perfect firewall, and remember its "google tab, language docs tab, llm tab, and discord help channel" and maybe more
- also add a help stack for jp learning
- also add a personal blog where you glaze the things you love (and rep your nix config)
- similar to point above but, have a dedicated page that just perfectly summarizes why you would want to use nix over any OS in the world

before working on wine:
- learn every single nix syntax
- use as many possible combinations of nix syntax to make a few flake repos, and contribute at least 15 nixpkgs and at least 15 nix options
- restructure entire nix config with as much variety of nix syntax as possible
- implement at least 75% of features listed here
- learn how to solve every single NixOS chmod issue, and understand it perfectly
[options]:
- name = "somename";
opt1: installExe = "someinstaller.exe";
opt2: sourceDir = ./path/to/game/files; (fyi, you would only choose one of installExe or sourceDir)
- finalExe = "some-final.exe"; (exe to be executed once all downloads are finished)
- wineTricks = [ "cjkfonts" "vcrun2019" "d3dcompiler_47" ];
- exportVar = [ "WINEESYNC=1" "WINEFSYNC=1" ];
- unsetVar = [ "EOS_USE_ANTICHEATCLIENTNULL" "SDL_VIDEODRIVER" ];
- enable64Bit = true;
- enableDxvk = true;
- desktop.name = "Some Desktop Name!";
- desktop.comment = "erm idk put what you want here >x3";
- desktop.icon = someicon;
- desktop.categories = [ "Game" "Erm" "Hi" ];

anki flake:
- 

make every emulator declarative: (nix official, hm, or flake repo)
- shadps4
- ryujinx
- cemu

ultimate image/video/audio editing script:
- change resolution
- edit length of video or audio
- convert any and EVERY, and i mean EVERY media file to any other media file
- change orientation of media
- optimize media
- apply visual filters
- apply audio effects
- change volume of video or audio
- apply ai filters and prompts
- ai automatic background transparency crop
https://www.tecmint.com/convert-webm-video-linux/
https://github.com/nadermx/backgroundremover
rembg = "${pkgs.backgroundremover}/bin/backgroundremover";
img = "${pkgs.imagemagick}/bin/magick";
opt = "${pkgs.image_optim}/bin/image_optim";

make firefox 100% declarative:
(try and commit this to its hm module)
- declare language that firefox is displayed in
- declare cookie exceptions
- add seperators to bookmarks
- declare ublock
- choose if extensions are enabled or disabled on fresh install

- sops nix
- commit first package, realtimevc? vosk? openseeface? all in one vtube package? read link!!!!!!!!!!!! > (https://github.com/NixOS/nixpkgs/blob/master/CONTRIBUTING.md)
- obs overlays
- hijack OS? (these 2 links: https://github.com/nix-community/nixos-anywhere and https://github.com/elitak/nixos-infect)
- cracked out stylix.nix file (fanc syn too)
- shell.nix where you can do "nix develop C" or "nix develop rust" and swap between dev shells (also include a cracked out vscode or neovim)
- school
- thunderbird
- tmux
- cracked ai voice changer
- voice to location on screen
- https://astrid.tech/2022/09/22/0/nixos-gpu-vfio/
- astal in rust
- fastfetch
- bat
- gitui
- tree
- perfect terminal (notifications, other shit too)
- doing extra for everyone and yourself arc
- do everything it takes to start working on niren with a 100% safe computer, accounts, passwords, and efficient environment
- make firefox 100% declarative
- fix all folder permission problems (in your X folder too) so that there are ZERO security vulnerabilities
- perfect nixfind option (noogle, nixpkgs, nixoptions, homeoptions, relevant wiki pages, manual pages, ai, web results)
- perfect help option (man, tldr, navi, other tools too, relevant links from phind, phind output, multiple ai output)
- perfect dev shell (seperate file such as ./shell.nix)
- move non-solo packages away from packages.nix
- perfect jp vpn
- use all possible nix syntax and operators (even just once each)[https://nix.dev/manual/nix/2.17/language/operators]
- game dev docker/devshell ?
- declare gpu passthrough vm
- make entire pc japanese
- put everything into cloud
- wallpaper flake
- scrape any show in EN, JP, KR, or ZH with a single fuzzy search (example: media -jp breaking bad)
- cemu wiiu OR something switch emulator
- ps4 emulator
- make system analysis where it can tell you if something is good or bad usage wise of each component
- setup perfect mkoption flake for your wine games and make it look all fancy on github
- minecraft server on homelab (nixosanywhere? special repos for ssh? choose the most robust and accepted method, and make sure the firewall and safety is perfect)
- perfect dev environment, neovim included (https://nixos.wiki/wiki/NixOS_Containers)
- ssh with homelab (completely safe network wise)
- choco discord bot
- remove all scuffed activationScripts and make everything 100% declarative
- get rid of all possible sources of malicious code on machine (sometimes laptop fan is running way faster than it should)
- screen record
- gif record
- calculator gui
- jp vpn
- perfect disk.nix configuration (preparation for yubi key too)
- web scraper for jp, kr, zh, and french learning
- perfect firefox & language tools
- custom vim colorscheme
- package jp study workspace into flake
- language learning flake
- script that reverse image searches with every possible tool
- cli tool for converting ANY kind of file to ANY OTHER file (using options, so that it can apply multiple different operations in one command)
- replace mouse with ai
- ai assistant talk through mic and always be ready to talk to
- ai assistant can scan repo for virus
- make vm setup 100% declared (no gui configuration required)
- package cod into flake
- (generators) (custom nixos iso) (https://github.com/sjcobb2022/nixos-config/tree/main/generators)
- reliable /secret/files/dir system (so that nothing is shown on repo)
- hijack distros with nixos-anywhere reliably
- copy configs of xsharawi, lynaix, grox(vimjoyer), doom-emacs-main-dev, aylur, misterio77
- https://www.tecmint.com/ping-multiple-linux-hosts-using-fping/
- https://github.com/search?q=icon&type=repositories&s=stars&o=desc
- https://github.com/nix-community/nix-on-droid
- https://github.com/erebe/greenclip
- make sure everything is 100% declared (get back to exceptions such as firefox, steam, etc)

# how to use git
sudo pacman -S openssh git
ssh-keygen -t ed25519 -C <insert email here>
echo "HATOSU says, enter blank for all prompts"
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_ed25519
cat ~/.ssh/id_ed25519.pub
echo "HATOSU says, copy the contents of the ENTIRE pub file"
echo "HATOSU says, then go to your github settings and add the copied contents and put it into the ssh key field and add key"
-
sudo mkdir <foldler that contents of repo will be in>
sudo chmod a+rwx <folder you created>
sudo chmod a+rwx <your entire github folder too>
cd <folder you created>
git init
git config --global user.name "SomeUsername"
git config --global user.email "SomeEmail"
git config --global --add safe.directory <folder you created>
git remote add <choose custom name> https://github.com/hatosu/dots.git
git remote set-url dots https://<insert-username-here>:<insert-user-token-here>@github.com/hatosu/dots.git
git fetch <custom name you chose>
git switch main
vim file.txt
git add .
git add -A
git commit -am "testing to see if git works :3"
git push <custom name you chose>

# print working directory
pwd

# symlink related
ln -sfn ###link, symbolic, force, normal treatment###
find /path/to/directory/or/file -type l -delete ### delete symlink(s)###

# copy files without the symlink error
example: 
cp -L -R /etc/nixos /media/usb-drive

# piping output of cat to tgpt
cat ~/Diy/cleanse.sh | phind "what does this script do" 

# find out how much storage a directory takes
du -sh /path/to/directory

# list directories & storage take-up
df -h

# mount usb
fdisk -l
mkdir -p /media/usb-drive
mount /dev/sdc1 /media/usb-drive

# restore usb
fdisk -l
umount /dev/sdc1
dd if=/dev/zero of=/dev/sdc bs=4M status=progress
dd if=/dev/zero of=/dev/sdc bs=512 count=1
echo -e "n\np\n1\n\n\nw" | fdisk /dev/sdc
mkfs.vfat /dev/sdc1
lsblk
mkdir -p /media/usb-drive
mount /dev/sdc1 /media/usb-drive

# force wipe all partitions (does NOT make sure that data cant be recovered)
dd if=/dev/zero of=/dev/sda bs=1M status=progress

# force wipe all data (makes sure that the data cannot be recovered)
# (0 for one pass only which is usually enough, 1 for two passes, 5 for six passes which is hardcore but will 100% make sure no data is recovered)
shred -vfzn 5 /dev/sda

# gentoo wifi
1# create the file with vi or nano /etc/wpa_supplicant/wpa_supplicant-(your network device).conf
add the following to the file:
ctrl_interface=/run/wpa_supplicant
update_config=1
2# run the following command and have its output append to the file you just created
wpa_passphrase (wifi network name) (password) >> /etc/wpa_supplicant/wpa_supplicant-(your network device).conf
3# finally initialize the connection with
wpa_supplicant -B -i (your network device) -c /etc/wpa_supplicant/wpa_supplicant-(your network device).conf
4# test to see if it worked
ping gnu.org
